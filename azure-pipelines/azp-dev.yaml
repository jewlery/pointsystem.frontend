# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include: 
    - dev

pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'hadir-front'
  imageTag: '$(Build.BuildId)'
  acrUrl: 'tg2cregistry.azurecr.io'

stages:

- stage: Local_Build
  jobs:
  - job: npm_build
    pool:
      vmImage: 'ubuntu-latest'
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js'
      - script: |
          npm install
          npm run build
        displayName: 'npm install and build'

- stage: Build
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build & Push to ACR'
      inputs:
        containerRegistry: 'acr-connection'  # e.g., 'ACR-Service-Connection'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(imageTag)
          latest

- stage: Deploy
  jobs:
  - deployment: DeployToAKS
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Image name: $(imageName)"
              echo "Image tag: $(imageTag)"
            displayName: 'Print Image Details'

          - checkout: self
            displayName: 'checkout'

          - task: replacetokens@6
            displayName: 'Set Variable names in k8s manifests'
            inputs:
              sources: '$(Pipeline.Workspace)/s/k8s/deployment-dev.yaml'
              tokenPattern: 'azpipelines'
              logLevel: 'debug'
              ifNoFilesFound: 'warn'
          
          - task: KubernetesManifest@1
            displayName: 'Deploy to AKS'
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'dev-KubernetesCluster2-hadir-dev-1739194956822'
              namespace: 'frontend-dev'
              manifests: '$(Pipeline.Workspace)/s/k8s/deployment-dev.yaml'
              containers: '$(acrUrl)/$(imageName):$(imageTag)'